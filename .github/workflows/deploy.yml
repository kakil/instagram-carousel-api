name: Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      reason:
        description: 'Reason for manual deployment'
        required: true
        default: 'Manual deployment'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .  # Skip dev dependencies for deployment

    # Try a different approach - install SSH key
    - name: Install SSH key
      run: |
        echo "Setting up SSH key..."
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa

        # Convert the key if it's in the wrong format
        ssh-keygen -p -f ~/.ssh/id_rsa -m PEM -P "" -N "" || echo "Key conversion failed, might be in the right format already"

        # Create a more permissive SSH config
        echo "Host *" > ~/.ssh/config
        echo "  StrictHostKeyChecking no" >> ~/.ssh/config
        echo "  UserKnownHostsFile=/dev/null" >> ~/.ssh/config
        echo "  IdentitiesOnly yes" >> ~/.ssh/config
        echo "  BatchMode yes" >> ~/.ssh/config
        echo "  LogLevel DEBUG3" >> ~/.ssh/config
        chmod 600 ~/.ssh/config

        # Add server to known hosts
        ssh-keyscan ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts 2>/dev/null

        # Debug: Check key fingerprint
        echo "SSH key fingerprint:"
        ssh-keygen -l -f ~/.ssh/id_rsa

    - name: Test SSH Connection
      run: |
        # Test with verbose output
        echo "Testing SSH connection..."
        # Try with explicit key format options
        ssh -vvv -o "IdentityFile=~/.ssh/id_rsa" ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "echo 'Connection successful'"

    # We'll add the rest of the deployment steps if the above succeeds
    # ...
