name: Create Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build_and_release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine wheel
        pip install -e ".[dev]"

    - name: Run tests
      run: |
        pytest tests/

    - name: Build package
      run: |
        python -m build

    - name: Extract release notes
      id: extract_release_notes
      run: |
        # Extract version from tag
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        
        # Extract release notes
        python -c "
        import re
        with open('CHANGELOG.md', 'r') as f:
            content = f.read()
        
        pattern = rf'## \[{VERSION}\].*?(?=## \[|$)'
        match = re.search(pattern, content, re.DOTALL)
        
        if match:
            with open('release_notes.md', 'w') as f:
                f.write(match.group().strip())
            print('Release notes extracted')
        else:
            with open('release_notes.md', 'w') as f:
                f.write(f'Release {VERSION}')
            print('No release notes found, using default')
        "

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: dist/*
        body_path: release_notes.md
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Publish to PyPI
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        twine upload dist/*